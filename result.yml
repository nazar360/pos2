openapi: 3.0.0
info:
  title: LHDN MyInvois SDK
  version: 1.0.0
servers:
  - url: https://preprod-api.myinvois.hasil.gov.my
  - url: https://preprod-api.myinvois.hasil.gov.my
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
tags:
  - name: Platform
  - name: EInvoicing
paths:
  /connect/token:
    post:
      tags:
        - Platform
      summary: Login as Intermediary System
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                client_id:
                  type: string
                  example: '{{clientId}}'
                client_secret:
                  type: string
                  example: '{{clientSecret}}'
                grant_type:
                  type: string
                  example: client_credentials
                scope:
                  type: string
                  example: InvoicingAPI
      parameters:
        - name: onbehalfof
          in: header
          schema:
            type: integer
          example: '100015840'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1.0/documenttypes:
    get:
      tags:
        - Platform
      summary: Get All Document Types
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1.0/documenttypes/{id}:
    get:
      tags:
        - Platform
      summary: Get Document Type
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1.0/documenttypes/{Id}/versions/{vid}:
    get:
      tags:
        - Platform
      summary: Get Document Type Version
      security:
        - bearerAuth: []
      parameters:
        - name: Id
          in: path
          schema:
            type: string
          required: true
        - name: vid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1.0/notifications/taxpayer:
    get:
      tags:
        - Platform
      summary: Get Notifications
      security:
        - bearerAuth: []
      parameters:
        - name: dateFrom
          in: query
          schema:
            type: string
          description: >
            Optional: start date and time for notifications to retrieve based on
            the date sent
          example: '{dateFrom}'
        - name: dateTo
          in: query
          schema:
            type: string
          description: >
            Optional: end date and time for notifications to retrieve based on
            the date sent
          example: '{dateTo}'
        - name: type
          in: query
          schema:
            type: string
          description: >
            Optional: type of notifications to retrieve specified as ID of the
            type. (Notification types to be discussed later)
          example: '{type}'
        - name: language
          in: query
          schema:
            type: string
          description: "Optional: used to get notifications only if they were sent out in a specific language. Values:\_ms\_and\_en\n"
          example: '{language}'
        - name: status
          in: query
          schema:
            type: string
          description: "Optional: used to get notifications of certain status only, e.g., only those that were not delivered. Values:\_pending,\_batched,\_delivered,\_error\n"
          example: '{status}'
        - name: channel
          in: query
          schema:
            type: string
          description: "Optional: used to get notifications delivered over certain channel only. Values:\_email,\_push\n"
          example: '{channel}'
        - name: pageNo
          in: query
          schema:
            type: string
          description: >
            Optional: number of the page to retrieve. Typically this parameter
            value is derived from initial parameter less call when caller learns
            total amount of page of certain size
          example: '{pageNo}'
        - name: pageSize
          in: query
          schema:
            type: string
          description: >
            Optional: number of the packages to retrieve per page. Page size
            cannot exceed system configured maximum page size for this API
          example: '{pageSize}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1.0/taxpayer/validate/{tin}:
    get:
      tags:
        - EInvoicing
      summary: Validate taxpayer TIN
      security:
        - bearerAuth: []
      parameters:
        - name: idType
          in: query
          schema:
            type: string
          description: |
            (NRIC, Passport number, Business registration number, army number)
          example: '{idType}'
        - name: idValue
          in: query
          schema:
            type: string
          example: '{idValue}'
        - name: tin
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1.0/documentsubmissions:
    post:
      tags:
        - EInvoicing
      summary: Submit Documents
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                documents:
                  - format: XML
                    documentHash: asdsa234322r32f23f3f32f32f
                    codeNumber: INV12345
                    document: >-
                      
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1.0/documents/state/{uuid}/state:
    put:
      tags:
        - EInvoicing
      summary: Reject Document
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                status: rejected
                reason: some reason for rejected document
      security:
        - bearerAuth: []
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1.0/documents/recent:
    get:
      tags:
        - EInvoicing
      summary: Get Recent Documents
      security:
        - bearerAuth: []
      parameters:
        - name: pageNo
          in: query
          schema:
            type: string
          description: >
            Optional: number of the page to retrieve. Typically this parameter
            value is derived from initial parameter less call when caller learns
            total amount of page of certain size
          example: '{pageNo}'
        - name: pageSize
          in: query
          schema:
            type: string
          description: >
            Optional: number of the documents to retrieve per page. Page size
            cannot exceed system configured maximum page size for this API
          example: '{pageSize}'
        - name: submissionDateFrom
          in: query
          schema:
            type: string
          description: >
            Optional: The start date and time when the document was submitted to
            the eInvoicing API, Time to be supplied in UTC timezone. Mandatory
            when ‘submissionDateTo’ is provided
          example: '{submissionDateFrom}'
        - name: submissionDateTo
          in: query
          schema:
            type: string
          description: >
            Optional: The end date and time when the document was submitted to
            the eInvoicing API, Time to be supplied in UTC timezone. Mandatory
            when ‘submissionDateFrom’ is provided
          example: '{submissionDateTo}'
        - name: issueDateFrom
          in: query
          schema:
            type: string
          description: >
            Optional: The start date and time when the document was issued.
            Mandatory when ‘issueDateTo’ is provided
          example: '{issueDateFrom}'
        - name: issueDateTo
          in: query
          schema:
            type: string
          description: >
            Optional: The end date and time when the document was issued.
            Mandatory when ‘issueDateFrom’ is provided
          example: '{IssueDateTo}'
        - name: direction
          in: query
          schema:
            type: string
          description: >
            Optional: direction of the document. Possible values: (‘Sent’,
            ‘Received’)
          example: '{direction}'
        - name: status
          in: query
          schema:
            type: string
          description: >
            Optional: status of the document. Possible values: (‘Valid’,
            ‘Invalid’, ‘Cancelled’, ‘Submitted’)
          example: '{status}'
        - name: documentType
          in: query
          schema:
            type: string
          description: |
            Optional: Unique name of the document type.
          example: '{documentType}'
        - name: receiverIdType
          in: query
          schema:
            type: string
          description: "Optional: Document recipient identifier type. Only can be used when ‘Direction’ filter is set to\_Sent. Possible values: (BRN, PASSPORT, NRIC, ARMY) This is mandatory in case the receiverId is provided\n"
          example: '{receiverIdType}'
        - name: receiverId
          in: query
          schema:
            type: string
          description: "Optional: Document recipient identifier. Only can be used when ‘Direction’ filter is set to\_Sent. Possible values: (Business registration number, Passport Number, National ID(NRIC), Army ID)\n"
          example: '{receiverId}'
        - name: receiverTin
          in: query
          schema:
            type: string
          description: "Optional: Document recipient TIN. Only can be used when ‘Direction’ filter is set to\_Sent. \n"
          example: '{receiverTin}'
        - name: issuerTin
          in: query
          schema:
            type: string
          description: "Optional: Document issuer identifier. Only can be used when ‘Direction’ filter is set to\_Received.\n"
          example: '{issuerTin}'
        - name: issuerIdType
          in: query
          schema:
            type: string
          description: >-
            Optional: Document issuer identifier type. Only can be used when
            ‘Direction’ filter is set to Received. Possible values: (BRN,
            PASSPORT, NRIC, ARMY) This is mandatory in case the issuerId is
            provided
          example: '{issuerIdType}'
        - name: issuerId
          in: query
          schema:
            type: string
          description: >-
            Optional: Document issuer identifier. Only can be used when
            ‘Direction’ filter is set to Received. Possible values: (Business
            registration number, National ID(IC), Passport Number, Army ID)
          example: '{issuerId}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1.0/documentsubmissions/{submissionUid}:
    get:
      tags:
        - EInvoicing
      summary: Get Submission
      security:
        - bearerAuth: []
      parameters:
        - name: submissionUid
          in: path
          schema:
            type: string
          required: true
          description: Unique document submission ID in eInvoicing
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1.0/documents/{documentUUID}/raw:
    get:
      tags:
        - EInvoicing
      summary: Get Document
      security:
        - bearerAuth: []
      parameters:
        - name: documentUUID
          in: path
          schema:
            type: string
          required: true
          description: Unique ID of the document to retrieve.
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1.0/documents/{uuid}/details:
    get:
      tags:
        - EInvoicing
      summary: Get Document Details
      security:
        - bearerAuth: []
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
          description: Unique ID of the document to retrieve.
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1.0/documents/search:
    get:
      tags:
        - EInvoicing
      summary: Search Documents
      security:
        - bearerAuth: []
      parameters:
        - name: uuid
          in: query
          schema:
            type: string
          description: 'Optional: Unique ID of the document to retrieve.'
          example: '{uuid}'
        - name: submissionDateFrom
          in: query
          schema:
            type: string
          description: >-
            Optional: The start date and time when the document was submitted to
            the eInvoicing API, Time to be supplied in UTC timezone. Mandatory
            when ‘submissionDateTo’ is provided or issueDate filters are not
            used
          example: '{submissionDateFrom}'
        - name: submissionDateTo
          in: query
          schema:
            type: string
          description: >
            Optional: The end date and time when the document was submitted to
            the eInvoicing API, Time to be supplied in UTC timezone. Mandatory
            when ‘submissionDateFrom’ is provided or issueDate filters are not
            used
          example: '{submissionDateTo}'
        - name: continuationToken
          in: query
          schema:
            type: string
          description: >
            Optional: Token provided to navigate to the next page. Must be
            omitted or use an empty string when requesting the first page.
          example: '{continuationToken}'
        - name: pageSize
          in: query
          schema:
            type: string
          description: >
            Optional: number of the documents to retrieve per page. Page size
            cannot exceed system configured maximum page size for this API.
            Default is 100
          example: '{pageSize}'
        - name: issueDateFrom
          in: query
          schema:
            type: string
          description: >
            Optional: The start date and time when the document was issued.
            Mandatory when ‘issueDateTo’ is provided or submissionDate filters
            are not used
          example: '{issueDateFrom}'
        - name: issueDateTo
          in: query
          schema:
            type: string
          description: >
            Optional: The end date and time when the document was issued.
            Mandatory when ‘issueDateFrom’ is provided or submissionDate filters
            are not used
          example: '{issueDateTo}'
        - name: direction
          in: query
          schema:
            type: string
          description: >
            Optional: direction of the document. Possible values: (‘Sent’,
            ‘Received’). When not provided sent and received documents are
            retrieved.
          example: '{direction}'
        - name: status
          in: query
          schema:
            type: string
          description: >
            Optional: status of the document. Possible values: (‘Valid’,
            ‘Invalid’, ‘Cancelled’, ‘Submitted’)
          example: '{status}'
        - name: documentType
          in: query
          schema:
            type: string
          description: |
            Optional: Unique name of the document type.
          example: '{documentType}'
        - name: receiverId
          in: query
          schema:
            type: string
          description: "Optional: Document recipient identifier. Only can be used when ‘Direction’ filter is set to\_Sent. Possible values: (Business registration number, Passport Number, National ID)\n"
          example: '{receiverId}'
        - name: receiverIdType
          in: query
          schema:
            type: string
          description: "Optional: Document recipient identifier type. Only can be used when ‘Direction’ filter is set to\_Sent. Possible values: (BRN, PASSPORT, NRIC, ARMY) This is mandatory in case the receiverId is provided\n"
          example: '{receiverIdType}'
        - name: issuerTin
          in: query
          schema:
            type: string
          description: "Optional: Document issuer identifier. Only can be used when ‘Direction’ filter is set to\_Received."
          example: '{issuerTin}'
        - name: receiverTin
          in: query
          schema:
            type: string
          description: >-
            Optional: Document receiver identifier. Only can be used when
            ‘Direction’ filter is set to Received.
          example: '{receiverTin}'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
